*{
    box-sizing: border-box;
    outline: none;
}
html {
    font-size: 18px;
};
body{
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1rem;
    color: #23394d
};
a{
    text-decoration: none;
    color: #23394d;
    background-color: none;
};

$colors:(
    primary:#007bff,
    "white": #fff,
    "black":#2f2e2ee3,
    "light-grey":#2f2e2e2e
);

// text-color and backgroud-color

@each $colorKey, $color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }
    .bg-#{$colorKey} {
        background-color: $color;
    }
}
.lh{
    line-height: 2rem;
}

//text-align

@each $var in (left,center, right) {
    .text-#{$var} {
        text-align: $var;
    }
    
}

//font-size

$base-font-size:1rem;

$font-size:(
    s:1,
    m:1.5,
    l:2,
    xl:3
);
@each $sizeKey, $size in $font-size {
    .fs-#{$sizeKey} {
        font-size:$size*$base-font-size;
    }  
}

//flex layout

.d-flex{
    display: flex;
};
.flex-c{
    flex-direction: column;
};
$flex-jc:(
    start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around,
);

@each $key, $value in $flex-jc {
    .jc-#{$key}{
        justify-content: $value;
    }
}
$flex-ai:(
    start:flex-start,
    end:flex-end,
    center:center,
    stretch:stretch
);

@each $key, $value in $flex-ai {
    .ai-#{$key}{
        align-items: $value;
    }
}

.flex-1 {
    flex: 1;
}

//spacing

$spacing-types:(m:margin,p:padding);
$spacing-directions:(t:top,r:right,b:bottom,l:left);
$spacing-base-size:1rem;
$spacing-sizes:(0:0,1:0.25,2:0.5,3:1,4:1.5,5:3);

@each $typeKey, $type in $spacing-types {
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey}{
            #{$type}:$size*$spacing-base-size;
        }
    }
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey}{
            #{$type}-left:$size*$spacing-base-size;
            #{$type}-right:$size*$spacing-base-size;
        }
    }
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}y-#{$sizeKey}{
            #{$type}-top:$size*$spacing-base-size;
            #{$type}-bottom:$size*$spacing-base-size;
        }
    }
    @each $directionKey, $direction in $spacing-directions {
        @each $sizeKey, $size in $spacing-sizes {
            .#{$typeKey}#{$directionKey}-#{$sizeKey}{
                #{$type}-#{$direction}:$size*$spacing-base-size;
            }
        }
    }
}
